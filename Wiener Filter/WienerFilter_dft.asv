function RestoredImage = WienerFilter_dft(y,h,sigma);
% RestoredImage = WienerFilter_fft(y,h,sigma);
% y: Degraded image (with blur and noise)
% h: Degrade kernel
% sigma: standard deviation of noise
N = size(y,1);
Yf = fft2(y);
 = dft2(y);
h=[h zeros(size(h,2),N-size(h,2));zeros(N-size(h,1),N)]; %Padding h with zeros
Hf = dft2(h,N,N);
Hf = fft2(h,N,N);
Syy = abs(Yf).^2/N^2;
See=sigma^2;
Sxx=(Syy-See);
Gf = conj(Hf)./(abs(Hf.^2)+sigma^2./Sxx);
eXf = Gf.*Yf;
RestoredImage = real(ifft2(eXf));
return
